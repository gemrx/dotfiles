git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
ls Wallpapers
ln -s /home/gemr/Insync/gilberto.molinar1@utp.ac.pa/OneDrive\ Biz/Wallpapers /home/gemr/Pictures
cd Pictures
mkdir practica
code practica
code Tareas/animacion-cuadrado-circulo
mv practica problema1
mkdir problema2
code problema1
code problema2
nano Tareas/animacion-cuadrado-circulo/style.css
mkdir lab2
mv lab2 Lab2
mv -r problema1 Lab2 
mv problema1 Lab2 
mv problema2 Lab2
mv Tareas Laboratiorios
mv Laboratiorios Tareas
mkdir Laboratorios
mv Lab2 Laboratorios
mv Lab2 Lab1
cd Tareas
mkdir tarea1
mv animacion-cuadrado-circulo tarea1
mv triangulo tarea1
ls practica
remove practica
rm practica
rm -r practica
ls .config
rm .zshrc.pre-oh-my-zsh
ls la
cd .oh-my-zsh
cd log
locate zsh_history
nano .zsh_history
~ cp .zshrc .zshrc_backup
cp .zshrc .zshrc_backup
mkdir .zsh
ln -s /home/gemr/Documents/Dotfiles/.zsh /home/gemr
touch .zshrc
mkdir plugins themes
c
d
cleaR
CLEAR
rm .zshrc
mv /home/gemr/.zsh_history .
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k\

cd powerlevel10k
mv powerlevel10k .zsh/themes
CD
ls themes/powerlevel10k
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
nano .zsh/zshrc
cd .zsh/
cd .zsh/plugins
git clone https://github.com/zsh-users/zsh-autosuggestions
git clone https://github.com/zsh-users/zsh-history-substring-search
ls zsh-autosuggestions
nano .zshrc_backup
nano zsh/.zshrc
ls -dF --group-directories-first *\

ls --group-directories-first *\

ls -group-directories-first
ls --group-directories-first
hola
cat 
nano Documents/Dotfiles/.config/i3/config
dasdas
man ls
touch aliases.zsh
nano .zsh/.zshrc
nano .zsh
ls -a --icons
exa -a --icons
exa -G --icons --group-directories-first 
exa --icons --group-directories-first 
exa -a --icons --group-directories-first 
exa -aG --icons --group-directories-first 
exa --color=always --icons --group-directories-first 
exa
ls .zsh
exa -lh
exa -la
exa -lah
ls -a .config
cat
vi
nano .config/alacritty
asdasdasd
asdasd
xev
hola hola hola
gnome
gnome-shell -v
gnome-shell --version
flatpak install flathub com.discordapp.Discord
ifconfig
dnf info gnome-tweaks
dnf search gnome-tweaks
sudo dnf install gnome-tweaks
sudo firewall-cmd --state\

sudo systemctl stop firewalld\

sudo firewall-cmd --state
sudo firewall-cmd start
sudo firewall-cmd
ps -e | grep tty
gnome-terminal
git add -all
git reset --mixed
ls -la .zsh
git add --all
git commit -m "updates"
git push
rm -r .config/alacritty
nano Documents/Dotfiles/.config/alacritty/alacritty.yml
dpkg -l | grep libgtk
sudo dnf install brave
sudo dnf remove brave
sudo dnf remove brave-browser
sudo dnf install brave-browser
gnome-terminal --version
gsettings get org.gnome.desktop.interface gtk-theme
killall gnome-terminal
flatpak install flathub com.mattjakeman.ExtensionManager
echo "Hola"
nano .config/gtk-3.0/gtk.css
sudo dnf install Bitwarden-2023.4.0-x86_64.rpm
sudo dnf remove Bitwarden-2023.4.0-x86_64.rpm
sudo dnf install alacritty
nano .config/alacritty/alacritty.yml
nano .config/alacritty/themes
nano .config/alacritty/themes/onedark.yml
nano .config/polybar/themes/onedark.ini
dnf search gpick
sudo dnf install gpick
cler
cd Dotfiles
ls -la .config
dnf copr enable nickavem/adw-gtk3
sudo dnf copr enable nickavem/adw-gtk3
dnf install adw-gtk3~
dnf install adw-gtk3
sudo dnf install adw-gtk3
flatpak install flathub com.github.GradienceTeam.Gradience
nano Documents/Dotfiles/.config/polybar/themes/onedark.ini
insync status
sudo dnf remove alacritty
git clone https://github.com/vinceliuice/Colloid-icon-theme.git
ls .local/share/
cd Colloid-icon-theme/
cd Documents/Git/Colloid-icon-theme
install.sh -t default yellow grey
sh install.sh -t default yellow grey
cd Colloid-icon-theme
sh install.sh -s nord -t default yellow grey
sudo dnf search discord
sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm\

dnf search discord
cd .config/discord
nano settings.json
mkdir problema3
code problema3
cd Documents/Desarrollo\ de\ Software\ -\ V\ Semestre/Desarrollo\ de\ Software\ V
code Laboratorios/Lab1
code Lab1/proyecto
flatpak remove Discord
sudo dnf install discord
code Documents/Desarrollo\ de\ Software\ -\ V\ Semestre/Desarrollo\ de\ Software\ V
code Laboratorios/Lab1/proyecto
cd .local/share
touch .themes
rm .themes
mkdir .themes
cd themes
mkdir OneDark-Bluish
cd OneDark-Bluish
mkdir gnome-shell
cd gnome-shell
touch gnome-shell.css
nano gnome-shell.css
nano .themes/OneDark-Bluish/gnome-shell/gnome-shell.css
nano Documents/Code/Web/rock-paper-scissors/app.js
poweroff
nano Documents/Yo.odt
cd Laboratorios
ls Lab1
cd Lab1
mkdir problema7
code problema7
flatpak install flathub io.bassi.Amberol
ls Documents/Code/Web
nano Documents/Dotfiles/.config/alacritty/themes/onedark.yml
rm Yo.pdf Yo.odt
mkdir Monokai-FlatDark.txt
ls Monokai-FlatDark.txt
rm Monokai-FlatDark.txt
rm -r Monokai-FlatDark.txt
touch Monokai-FlatDark.txt
nano Monokai-FlatDark.txt
ls -l
mkdir pacrial_kaiser
cd Downloads/
cd pacrial_kaiser
cd Transcripciones\ videos
touch prueba.txt
cd Downloads/pacrial_kaiser/Transcripciones\ videos
touch Placa Madre - Partes
touch PlacaMadre-Partes
touch PlacaMadre-Partes2
dnf search docker-
sudo dnf search docker-desktop
dnf search docker
dnf search dnf-plugins-core 
sudo dnf -y install dnf-plugins-core
dnf search docker-desktop
 sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo\

sudo dnf install ./docker-desktop-<version>-<arch>.rpm
ls -a
dnf list
sudo dnf remove sqlite
dnf search brave
dnf info sqlite
dnf list installed | grep sql
sudo dnf remove sqlite3
print $fpath[-1]/_dnf
dnf search completion
dnf search zsh-completion
gnome-text-editor .zshrc
sudo dnf install sqlite3
sudo dnf install docker-desktop-4.19.0-x86_64.rpm
sudo dnf remove docker-desktop-4.19.0-x86_64.rpm\

sudo dnf remove docker-desktop\

ls -la\

sudo dnf install ./docker-desktop-4.19.0-x86_64.rpm
sudo nano /etc/default/grub
reboot
git clone https://github.com/docker/welcome-to-docker
cd welcome-to-docker
nano MAINTAINERS.md
docker build -t welcome-to-docker .
docker --help
docker info
sudo systemctl restart docker
docker restart
cd JavaScript\ 1
ls JavaScript30
code JavaScript30/04\ -\ Array\ Cardio\ Day\ 1
code Documents/Code/Odin/JavaScript\ 1/JavaScript30/04\ -\ Array\ Cardio\ Day\ 1
code Documents/Code/Odin/JavaScript\ 1/JavaScript30/04\ -\ Array\ Cardio\ 07
cd Documents/Code/Odin
mv JavaScript\ 1 javascript
cd javascript
cd JavaScript30
code 07\ -\ Array\ Cardio\ Day\ 2
dnf search btop
sudo dnf install btop
btop
sudo dnf remove bitwardern
sudo dnf remove bitwarden
linux-x64-latest.AppImage
cd Music
cd Music\ Collection
ls The\ Weeknd
code
mkdir tarea
code Documents/Desarrollo\ de\ Software\ -\ V\ Semestre/Desarrollo\ de\ Software\ V/tarea
code Documents/Code/Web/rock-paper-scissors
code Documents/Code/Web/practice
dnf search obs
flatpak install flathub com.obsproject.Studio
cd Code/Web/practice
mv tarea locura
mv locura animacion-js
ls Documents
ls Laboratorios
ls lab1
ls Laboratorios/Lab1
ls Tareas
code Tareas/tarea1
ls locura
code locura
ls tarea
code tarea
rm tarea
rm -r tarea
code animacion-js
docker run -d -p 8080:80 --name webserver nginx
code Documents/Desarrollo\ de\ Software\ -\ V\ Semestre/Desarrollo\ de\ Software\ V/animacion-js
zip animacion-js
zip -r animacion-js .
docker start webserver
docker container exec -it webserver bash
docker stop webserver
docker ps --all
mkdir Docker
mkdir myapp
cd myapp
nano index.html
mv myapp mywebsite
code mywebsite
docker rmi mywebsite
git clone https://github.com/nschurmann/mongoapp-curso-docker.git
cd mongoapp-curso-docker
docker rm webserver\ 
docker rm webserver
docker rmi nginx
docker pull mongo
docker create -p 27017:27017 --name monguito -e MONGO_INITDB_ROOT_USERNAME=nico -e MONGO_INITDB_ROOT_PASSWORD=password mongo
docker start monguito
dnf info curl
dnf list installed | grep curl
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
export NVM_DIR="$HOME/.nvm"\
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm\
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
command -v nvm
[200~nvm install --lts
nvm install --lts
nvm use --lts
docker run -d -p 27017:27017 --name monguito -e MONGO_INITDB_ROOT_USERNAME=nico -e MONGO_INITDB_ROOT_PASSWORD=password mongo
docker stop monguito
docker rm monguito
docker rmi mongo
cd Documents/Docker
rm -r mongoapp-curso-docker
sudp rm -r mongoapp-curso-docker
sudo rm -r mongoapp-curso-docker
kubectl
kubectl 
dnf search kubectl
dnf search kubernetes
cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo\
[kubernetes]\
name=Kubernetes\
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch\
enabled=1\
gpgcheck=1\
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\
EOF
sudo dnf install -y kubectl
kubectl cluster-info
kubectx
kubectl current-context
kubectl get all\ 
kubectl get all
touch miparte
nano miparte
kubectl nodes
kubectl node
mkdir Kubernetes
cd Kubernetes
kubectl run nginx-pod --image=nginx:1.24 --port=80\

man kubectl
kubectl create pod nginx-pod --image=nginx:1.25 --port=80\

kubectl create --help
kubectl create pod
kubectl create pod nginx-pod --image=nginx --port=80\

touch declarative-nginx-pod.yml
kubectl run nginx-pod --image=nginx:1.24 --port=80
kubectl delete pod nginx-pod
kubectl run imperative-nginx-pod --image=nginx:latest --port=80
kubectl delete pod declarative-nginx-pod
kubectl apply -f declarative-nginx-pod
kubectl apply -f declarative-nginx-pod.yml
kubectl apply --help
kubectl describe pod declarative-nginx-pod
kubectl exec -it declarative-nginx-pod bash
cat declarative-nginx-pod.yml
kubectl get pdos
kubectl exec declarative-nginx-pod bash
kubectl exec declarative-nginx-pod -- bash
kubectl exec declarative-nginx-pod -- /bin/bash\

kubectl exec declarative-nginx-pod -- bash\

kubectl exec -it declarative-nginx-pod --container declarative-nginx-pod -- bash\

kubectl create namespace prueba
kubectl get ns
kubectl delete namespace prueba
kubectl get pods --all
kubectl get pods --all-namespaces
kubectl create namespace mynamespace
java -v
dnf list installed | grep java
dnf list installed | grep openjdk
dnf search opendjk
dnf search opendjdk
sudo dnf install java-17-openjdk-devel.x86_64
sudo tar -xzf jetbrains-toolbox-1.28.1.15219.tar.gz -C /opt
cd /opt
sudo mv jetbrains-toolbox-1.28.1.15219 jetbrains
ls | grep jetbrains
/opt/jetbrains/jetbrains-toolbox \

mkdir Kotlin
cd Kotlin
mkdir IdeaProjects
cd Documents/Code/Kotlin
rm -r HolaMundo/
rm -r IdeaProjects/HolaMundo
code mynamespace.yml
kubectl get namespaces
touch mypod-example.yml
code mypod-example.yml
rm mypod-example.yml
kubectl delete pod ubuntu
kubectl apply -f volumes/ephemeral-volume.yml
kubectl get context
kubectl describe node
kubectl -v
kubectl --v
kubectl --version
kubectl --short
kubectl version --short
code declarative-nginx-pod.yml
kubectl describe pod nginx-pod
kubectl exec -it nginx-pod -- bash
kubectl describe pod ephemeral-volume-pod
kubectl exec -it ephemeral-volume-pod -- bash
kubectl exec -it ephemeral-volume-pod --container nginx-container -- bash
kubectl logs fedora-pod
kubectl describe pod fedora-pod
kubectl exec -it fedora-pod -- bash
kubectl exec -it volume-pod -- bash
kubectl exec -it volume-pod --container ubuntu-container  -- bash
kubectl delete pod volume-pod
kubectl exec -it volume-pod --container fedora-container  -- bash
mkdir deployments
mkdir replicas
kubectl get rs
kubectl describe rs nginx-replica
kubectl describe deployment nginx-deployment
code textovar
code Documents/Code/Web/landing
kubectl delete pod fedora-pod
kubectl delete pod ubuntu-pod
kubectl delete pv mypv
kubectl delete pvc mypvc
kubectl apply -f storage/persistenVolumes/pv.yml
kubectl apply -f storage/persistenVolumes/pvc.yml
kubectl apply -f storage/persistenVolumes/fedora-pod.yml
kubectl exec -it fedora-pod --container fedora-container  -- bash
kubectl apply -f storage/persistenVolumes/ubuntu-pod.yml
kubectl exec -it ubuntu-pod --container ubuntu-container  -- bash
kubectl apply -f deployments/nginx-deployment.yml
kubectl exec -it busybox-pod --container busybox-container -- bash 
kubectl describe nodes
kubectl get nodes -o wide
kubectl get pods -o wide
kubectl delete service myservice
kubectl delete deployment nginx-deployment
kubectl get services
kubectl get pv
kubectl get pvc
kubectl api-resources
dnf search awscli
dnf info awscli
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
mkdir aws
mv awscliv2.zip aws
unzip awscliv2.zip
cd aws
sudo ./aws/install
aws --help
aws hjelp
aws help
cd .config/
cd .kube
nano config
ls -la | grep eksctl
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
sudo mv /tmp/eksctl /usr/local/bin
aws version
eksctl version
aws --version
kubectl version
eksctl create cluster -f cluster.yaml
aws eks update-kubeconfig --region us-east-1 --name copa-hackathon-2023\

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
kubectl dashboard
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
kubectl create-fargate-profile
eksctl create-fargate-profile
kubectl get deployment metrics-server -n kube-system
kubectl apply -f admin.yml
kubectl create token eks-admin -n kube-system\

kubectl proxy\

eksctl create fargateprofile \\
    --cluster copa-hackathon-2023 \\
    --name fargate-profile \\
    --namespace hackathon-fargate \\
    --labels infrastructure=fargate
aws eks create-addon --addon-name adot --cluster-name my-cluster --configuration-values my-configuration-values\

aws eks describe-addon --addon-name adot --cluster-name my-cluster\

aws eks create-addon --addon-name adot --cluster-name my-cluster\

aws eks create-addon --addon-name adot --cluster-name copa-hackathon-2023 \

aws eks describe-addon --addon-name adot --cluster-name copa-hackathon-2023\

cd .aws
nano /.aws/credentials
nano credentials
code credentials
aws configure
aws sts get-session-token
aws get-session-token
echo $AWS_ACCESS_KEY_ID
eksctl create cluster -f cluster.yml
cd hackathon
git --version
git -v
cd Documents/Kubernetes
node -v
nvm -v
npm i --help
npm i @angular/cli
ng --version
ng --version\

npm install -g npm@9.6.7
npm list -g @angular/cli
npm list -g 
npm list
npm install -g typescript
dnf search openjdk\

sudo dnf install java-11-openjdk-devel.x86_64
java --version
update-alternatives --list java\

dnf list installed | grep openjdk\

/usr/libexec/java_home -V
update-alternatives --list java
whereis java\
\

ls -l /usr/bin/java
ls -l /etc/alternatives/java
dnf search maven
mvn --version
snap
sudo dnf install snapd\

sudo ln -s /var/lib/snapd/snap /snap\

snap version
sudo snap install groovy --classic\

echo mysql80-community-release-fc38-1.noarch.rpm
wget https://dev.mysql.com/get/mysql80-community-release-fc38-1.noarch.rpm\

sudo rpm -Uvh mysql80-community-release-*
sudo dnf install mysql-workbench\

sudo dnf install fedora-workstation-repositories\

sudo dnf config-manager --set-enabled google-chrome\

sudo dnf install google-chrome-stable\

touch todo
mkdir bgcurso
mkdir curso-de-git
git init
mkdir 01.Ejercicios
touch README.md\ 
touch README.md
touch console.log
nano README.md
touch .gitignore
nano .gitignore
ls 01.Ejercicios
git add .
git commit -m "feat: Mi primer commit"
git config user.name
git config user.email
git remote add origin https://gitlab.com/gemrx/taller-git.git \

git remote -v
git push -u origin --all
cd coe
cd curso-de-git
git fetch
git fetch --help
git pull
ls -la 01.Ejercicios
cd 01
nano 01.Ejercicios
cd 01.Ejercicios
nano SayayinDTO.java
git config user.name\

git status
git log
nano todo
cd Documents/Git
ls -la | grep batch
cd /
cd batch
cd /usr/share/
find groovy
ls -la | grep groovy
ls -la | grep sdk
cd /var/lib/snapd/snap/bin/groovy
cd /var/lib/snapd/snap/bin
echo $GROOVY_HOME\

cd /var/lib/snapd/snap/bin/groovy\

cd /var/lib/snapd/snap/bin/\

ls groovy
ls 24
ls current
cd current
file .
sudo nautilus .
cd Downloads/groovy_utp/common/lib
cp . /var/lib/snapd/snap/groovy/current/lib
cp .* /var/lib/snapd/snap/groovy/current/lib
cp * /var/lib/snapd/snap/groovy/current/lib
sudo cp * /var/lib/snapd/snap/groovy/current/lib
nautilus /var/lib/snapd/snap/groovy/current/lib
sudo nautilus /var/lib/snapd/snap/groovy/current/lib
gksudo nautilus /var/lib/snapd/snap/groovy/current/lib
sudo nautilus
cp lib/* /var/li/sn/snap/g/current/lib
cp lib/* /var/li/snapd/snap/g/current/lib
cp lib/* /var/lib/snapd/snap/groovy/current/lib
sudo cp lib/* /var/lib/snapd/snap/groovy/current/lib
sudo cp -r lib/* /var/lib/snapd/snap/groovy/current/lib
sudo cp -r lib/* /var/lib/snapd/snap/groovy/24/lib
sdk --help[
sdk --help
curl -s "https://get.sdkman.io" | bash
groovy --version
cd .sdkman/candidates/groovy/current
ls lib
sdk help
sdk install groovy
zsh 
cd common/config
code BGUTPConfig.cfg
cd groovy_utp
UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
bash UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
zsh UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
bash UTPPruebaGroovy1.groovy
./UTPPruebaGroovy1.groovy
sudo groovy ./UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
cd groovy_utp/sample/groovy
echo $PATH
echo $ZSH
sudo ./UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
cd ~/.sdkman/candidates/groovy/current
echo $HOME
ls -la |grep groovy
echo GROOVY_HOME
chmod +x UTPPruebaGroovy1.groovy
which groovy
nautilus /lib
echo $GROOVY_BATCH
cd $GROOVY_HOME/sample/groovy
bash ./UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
nano .bashrc
bash
[200~/home/gemr/.sdkman/candidates/groovy/current
cd /home/gemr/.sdkman/candidates/groovy/current\

cd groovy_utp/common/lib
cd sample
cd groovy
sdk remove groovy
sdk man list groovy
sdk uninstall groovy 4.0.12
4.0.12
sdk uninstall groovy 4.0.12 --force
sdk list groovy\

sdk install groovy 3.0.17
cd /home/gemr/.sdkman/candidates/groovy/current
cd lib
ls -la | grep common
groovy -cp /home/gemr/.sdkman/candidates/groovy/current/lib $HOME/groovy_utp/sample/groovy/UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
dnf search dos2unix
sudo dnf install dos2unix
dos2unix UTPPruebaGroovy1.groovy
echo $GROOVY_HOME
groovy -cp /home/gemr/groovy_utp/common/lib/* UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
groovysh
groovy -cp /home/gemr/.sdkman/candidates/groovy/current/lib/* UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
groovy UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
./UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
cd $GROOVY_BATCH/sample/groovy
groovy ./UTPPruebaGroovy1.groovy gilberto.molinar1@utp.ac.pa
code Ejercicio1.groovy
groovy ./Ejercicio1.groovy gilberto.molinar1
code Ejercicio2.groovy
groovy ./Ejercicio2.groovy gilberto.molinar1
code Ejercicio3.groovy
groovy ./Ejercicio3.groovy gilberto.molinar1
docker run hello-world
 kubectl config current-context
kubectl config get-contexts
kubectl config use-context docker-desktop\
\

kubectl get cluster
cleare
docker containers
docker container ls
docker container ls -la
docker rm mynginx
docker rm -f mynginx
docker rm a7f1d1b29becver
docker rm mywebserver
docker rm strange_mirzakhani
docker list images
docker rm fe7edaf8a8dc 
dnf list installed | grep docker
sudo dnf upgrade docker-desktop
docker --version
docker run -ti ubuntu /bin/bash
docker ps -a
docker ps -a | head
docker run -d --rm -p 8080:80 --name my-nginx nginx
docker exec -it my-nginx bash
docker rm -f 4dab
cd bgcurso
mkdir curso-de-docker
cd curso-de-docker
mkdir pagina-html
cd pagina-html
code index.html
chmod -R 777 *
cat index.html
docker run -d -p 8080:80 -v /home/gemr/Documents/Code/bgcurso/curso-de-docker/pagina-html:/usr/share/nginx/html --name my-nginx nginx
docker network create -d bridge my-bridge-network
docker network inspect c6c32f7576a0
docker network ls | grep bridge
docker network ls
docker run -d -p 8080:80 -v /home/gemr/Documents/Code/bgcurso/curso-de-docker/pagina-html:/usr/share/nginx/html --name my-nginx --net=my-bridge-network nginx 
docker logs my-nginx
docker describe 
docker network inspect my-bridge-network
docker rm -f my-nginx
touch Dockerfile
docker cat Dockerfile
docker build -t my-ubuntu-python:1.0 .
docker run -d -p 5000:5000 --name my-cool-container my-ubuntu-python:1.0
docker build -t my-ubuntu-python:1.1 .
docker login --username gemrx --password-stdin
docker login --username gemrx --password @Gilber1702@
pass init
touch mypassword.txt
nano mypassword.txt
cat mypassword.txt
cat ~/mypassword.txt | docker login --username gemrx --password-stdin
cat mypassword.txt | docker login --username gemrx --password-stdin
docker pull gemrx/myrepository:latest
docker image ls
docker rm gemrx/myrepository 
docker rm image gemrx/myrepository 
service docker stop
rm ~/.docker/config.json\

service docker start\

docker login
dnf search zoom
ls | grep zoom
sudo dnf install zoom_x86_64.rpm
kubectl get nodes
kubectl create deployment hello-echo --image=kicbase/echo-server:1.0
kubectl get deploy,pod
cleaer
kubectl describe pod hello-echo
kubectl get logs hello-echo
kubectl get pod logs hello-echo
kubectl logs hello-echo-868dfb6f5-spd48
kubectl exec -it hello-echo-868dfb6f5-spd48 -- env
kubectl exec -it hello-echo-868dfb6f5-spd48 -- bash env
kubectl exec -it hello-echo-868dfb6f5-spd48 -- bash
kubectl exec -it hello-echo-868dfb6f5-spd48 -- sh
kubectl exec -it hello-echo-868dfb6f5-spd48 -- /bin/sh
kubectl exec -it hello-echo-868dfb6f5-spd48  -- bash \

kubectl top pods
kubectl resource-capacity
ls -la | grep kafka
cd kafka_2.13-2.7.0
./bin/zookeeper-server-start.sh config/zookeeper.properties
./bin/kafka-server-start.sh config/server.properties
code ./bin/kafka-server-start.sh
./bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 2 --topic test-gilberto\

./bin/kafka-topics.sh --list --zookeeper localhost:2181
./bin/kafka-topics.sh --describe --zookeeper localhost:2181 --topic test-gilberto\

./bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test-gilberto --group grupo1
./bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test-gilberto
kubectl get pods
kubectl expose deployment hello-minikube --type=NodePort --port=8080
kubectl get deployments
kubectl expose deployment hello-echo --type=NodePort --port=8080
zip -r Taller\ Obserbavilidad /home/gemr/Documents
zip Taller\ Obserbavilidad 
sudo zip Taller\ Obserbavilidad 
sudo dnf install zip unzip
zip -r Taller\ Obserbavilidad
zip -r taller-observabilidad.zip Taller\ Obserbavilidad
npm
touch index.html
touch style.css
code icons-mediaquery
code landing
cd Desarrollo\ de\ Software\ -\ V\ Semestre
cd icons-mediaquery
cd Web
sudo dnf update -y\ 
cd Git/'
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1
exit
./install.sh -m -t all -l -N --normal --round
cd WhiteSur-gtk-theme
./install.sh -m -t all -l -i fedora -N --normal --round
cd .themes
nautilus .
fish
mkdir monokai-flatdark
cd monokai-flatdark
touch colors
rm colors
touch colors.txt
gnome-text-editor colors.txt
nano colors.txt
cd Documents/Code/Web
code etch-a-sketch
npm -v
npm --help
npm uninstall @angular/cli
npm uninstall typescript
npm uninstall -g tsc
npm uninstall -g typescript
npm uninstall -g @angular/cli
npm uninstall -g angular-cli
angular
npm list -g
java -version\

flatpak list
flatpak remove amberol
snap list installed
snap --help
snap list 
snap -h
snap info groovy
snap list
groovy
dnf list installed | grep groovy
dnf search groovy
sdk
sdk list
sdk uninstall groovy
groovy -v
sdk uninstall groovy 3.0.17 --force
sdk list groovy
rm -rf ~/.sdkman
rm .groovy
rm -r .groovy
code .zshrc
zsh
dnf list installed | grep workbench
sudo dnf remove mysql-workbench-community.x86_64
rm -r hackathon
aws
awscli
dnf list installed | grep aws
rm Software\ Control.txt
rm -r Basics
rm Laboratorio\ CSS_no_presentaron.pdf
cd Git
snap remove groovy
cd git
mv git Git
list
cd code
cd Documents/Code
cd .config
mkdir .hidden
echo "snap" >> ~/.hidden
rm -r .hidden
touch .hidden
echo "snap" >> .hidden
cd .config/gtk-3.0/gtk.css
cd .config/gtk-3.0
code gtk.css
dnf info insync
dnf list installed | grep rhyt
dnf list installed | grep terminal
dnf list installed | grep gpick
code Documents/Code/Web/etch-a-sketch
killall braev
killall brave
rm yo-edited3 yo-onlybackground.png
rm yo-edited3.png
mkdir Photos
touch respaldo.txt
cd Documents/Desarrollo\ de\ Software\ -\ V\ Semestre
cd Desarrollo\ de\ Software\ V
mkdir svg-prototype
ls 
cd Documents/Code/Web/landing
code animacion-request
code map-html
cd Documents/Code/Web/etch-a-sketch
mv Normal\ Wallpapers Normal
neofetch
cd Documents/Desarrollo\ de\ Software\ -\ V\ Semestre/Desarrollo\ de\ Software\ V/
code svg-prototype
code Documents/Desarrollo\ de\ Software\ -\ V\ Semestre/Desarrollo\ de\ Software\ V/svg-prototype
sudo dnf update -y
ls | grep proyecto
unzip proyecto-inicio.zip
cat intlTelInput
ls images
wpd
mv docker-compose.yml ../
cd Code/
nano Dockerfile
cd Documents/
cdclear
killall docker.service
ln -s Code /home/gemr/
rm code
nano aliases.zsh
ls onedrive
cd Documents/Dotfiles
cd .zsh
cd Insync/gilberto.molinar1@utp.ac.pa/OneDrive\ Biz
alias
cd /home/gemr/Insync/gilberto.molinar1@utp.ac.pa/OneDrive\ Biz
nano .zshrc
nano .zsh/aliases.zsh
source .zshrc
ln -s ~/Insync/gilberto.molinar1@utp.ac.pa/OneDrive\ Biz/Code /home/gemr/
mkdir joomla-project
docker rm my-ubuntu-python
docker -h
sudo service docker stop
sudo rm -rf /var/lib/docker\

sudo service docker start\

sudo dnf install docker-desktop-4.21.1-x86_64.rpm
docker rmi my-ubuntu-python
docker container ls -a
docker rm my-ubuntu-python:1.0
docker rm a2e57e408a7e
docker rm bd20456a3551
docker rmi my-ubuntu-python:1.0
docker images
touch example.yaml
LS -LA
cd mywebsite
cd .docker/
ls .docker
ls .docker/desktop
ls .docker/desktop/docker.sock
ls .docker/desktop/
ls .docker/desktop/ | grep docker.sock
code example.yaml
docker -v
mkdir docker-compose.yml
mkdir -r docker-compose.yml
rm -r docker-compose.yml
nano Documents/joomla/docker-compose.yml
cd proyecto-inicio
ls intlTelInput
cp -r proyecto-inicio /home/gemr/Code/Docker/joomla-project
cd ./proyec
sudo docker-compose -d
docker
code docker-compose.yml
htop
killall docker-desktop
killall docker
sudo docker-compose up -d
docker-compose down 
rm docker-compose.yaml
cp docker-compose.yml ../../Code/Docker/joomla-project
cd onedrive
one
cd joomla
code proyecto-inicio
nano docker-compose.yml
docker start
docker-desktop
docker-compose ps
docker-compose downd
docker-compose up
docker volumes ls
docker rm joomla-project_db_data
docker volume ls
docker volume rm joomla-project_db_data
rm -r data
docker-compose down\ 
docker-compose up -d\ 
sudo lsof -i :8080
cd Documents/joomla
unzip Proyecto.zip
ls Proyecto
cd Proyecto
rm Proyecto.zip
unzip Proyecto-1.zip
cd Code/Docker
rm proyecto-inicio
sudo rm proyecto-inicio
nano docker-compose.yaml
docker exec -it 238ba2e34c9a bash
docker exec -it af5defeeb54e bash
docker exec -it 034a030e7a10 bash
docker exec -it 5c8335eeb5ff bash
clea
lcear
docker exec -it 5114aebd70bd  bash
code Proyecto
docker exec -it 4f0d7389e1a3  bash
sudo rm -r proyecto-inicio
docker exec -it joomla bash
docker-compose down'
docker-compose down -d
mkdir data
mkdir joomla-settings
pwd
sudo rm -r database
ls data
cleart
zip -r joomla-project joomla-project\

sudo zip -r joomla-project joomla-project\

docker exec -it 627aa1feb443 bash
code Proyecto-1
onedrive
sudo zip -r joomla-project joomla-project
sudo zip -r -y joomla-project joomla-project
zip -r joomla-project joomla-project
zip -ry joomla-project joomla-project
cp -r joomla-project $HOME
sudo cp -r joomla-project $HOME
zip joomla-project joomla-project
ls joomla-project.zip
rm joomla-project
rm -r joomla-project
code joomla-project
rm definitivo.zip
rm footer.zip
rm diablos.zip
rm dios.zip
rm WebSite5329829.zip
rm template.zip
clewar
cd $HOME
cd Downloads
unzip joomla-project.zip
cd 
cd Code
cd Docker
cd joomla-project
zip -r data data
rm data.zip
cd data
cd database
cd joomla-settings
cd plugins
ls templates
cd
cd Documents
sudo rm -r joomla-project
ls
docker-compose start
sudo rm -r data
docker-compose restart
cd Code/Docker/joomla-project
docker exec -it c1af66a3a827 bash
celar
docker ps
docker exec -it ef72ef8fc4be bash
ls -la
cp -R data /home/gemr
sudo cp -R data /home/gemr
touch docker-compose.yaml
docker-compose down
sudo rm -r data/database
docker-compose up -d
docker-compose stop
clear
cd ../
code .
code .
docker-compose start
docker-compose down
sudo rm -r data
clear
docker-compose up -d
docker-compose restart
ls -la
unzip proyecto12.zip
clear
docker ps
docker exec -it fe2d3e21a383 bash
dnf seach qtile
clear
sudo dnf update -y
cd Code
clear
cd Web
ls -la
cd etch-a-sketch
code .
cd doce
cd
clear
cd Code
cd Web
mkdir canvas-animation
cd canvas-animation
touch index.html
touch style.css
touch script.js
ls -la
code .
cd ../
ls 
code etch-a-sketch
clear
cd Code
cd Web
ls
code etch-a-sketch
node script.js
node -v
clear
cd Code
ls -la
cd Web
code etch-a-sketch
git remote -v
mkdir .gitignore
rm -r .gitignore
ls -la
touch .gitignore
nano .gitignore
clear
git status
git add --all
git commit -m "setCellBackground() updated"
git push -u origin --all
cd Code
cd Web
code etch-a-sketch
l s-la
code rock-paper-scissors
onedrive
ls -la
cd Lic.\ Desarrollo\ de\ Software
cd Desarrollo\ de\ Software\ -\ V\ Semestre
cd Desarrollo\ de\ Software\ V
ls
code asignacion\ 1
code asignacion\ 2
code practica
code animacion-request
clear
cd
neofetch
code .
cd JavaScript
mkdir practica
ls
code practica
cd
cd Code
cd Web
ls -la
code canvas-practice
sudo rm -r canvas-practice
cd Code/Docker
cd joomla-settings
ls
code joomla-project
ls
zip -r joomla-project
ls -la
zip -r joomla-project joomla-project
cleaer
clear
fish
dnf search android
snap
snap -v
snap list
clear
sudo snap install android-studio --classic
cd Code
cd Kotlin
cd IdeaProjects
cd HolaMundo
cd ../
git clone https://github.com/CodingSTUFF070/LoginSignUpKotlin.git
ls -la
neofetch
clear
neofetch
cd .config
nano gtk.css
nano gtk-dark.css
cd ../
pwd
c;ear
locate gnome-shell
ls gnome-session
cd gtk-4.0
ls 
nano settings.ini
clear
cd
cd .themes
ls
cd OneDark-Bluish
cd gnome-shell
ls -la
nano gnome-shell.css
clear
cd /usr/share/themes
cd .themes
ls -la
cd OneDark-Bluish
cd gnome-shell
nano gnome-shell.css
cd
cd .var/app/com.github.GradienceTeam.Gradience
cd config
cd presets
cd user
ls
nano flat-dark.json
cd .themes
s
clear
mkdir custom-shell
ls
mv OneDark-Bluish custom-shell
cd /usr/share
ls | grep gnome
cd gnome-shell
cd theme
nano gnome-classic
nano gnome-classic.css
cat gnome-classic.css
ls -la
pwd 
clear
ls
code gnome-classic.css
cd custom-shell
mv OneDark-Bluish ../
cd ../
rm -r custom-shell
mv OneDark-Bluish onedark-bluish
clear\\
clear
cd onedark-bluish
mkdir monokai-flatdark
mkdir gnome-shell
cd
cd .themes
owd
ls 
clear
ls -la
cd monokai-flatdark
cd gnome-shell
ls
rm gnome-shell.css
pwd
touch gnome-shell.css
code gnome-shell.css
cd .themes
cd onedark-bluish
cd gnome-shell/
cat gnome-shell.css
cd ../
cd monokai-flatdark
ls
cd
code .themes
cd /usr/share/gnome
cd ../
cd gnome-shell/
ls
cd theme
ls 
code gnome-classic.css
cd
cd /usr/share/gnome-shell
cd theme
ls
pwd
dmesg -T 
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/JetBrains/JetBrainsMono/master/install_manual.sh)"
cd /home/gemr/.local/share/fonts
pwd
clear
cd ttf
nano OFL.txt
cd ../
cd fonts
ls -la
rm -r fonts
rm AUTHORS.txt
rm OFL.txt
cd
fc -list
fc list
list
fc -l
fc -h
fc
cd /usr/share/fonts
cd NerdFonts
ls -la
ls RobotoMonoNF
clear
cd Git
ls
cd Colloid-icon-theme
git status
clear
fc-list
cd /usr/share/fonts
cd NerdFonts
ls -la
ls JetBrainsMono
fc-cache
clear
onedrive
cd Linux
cd Fonts
cd NerdFonts
ls -la
cp -r JetBrainsMono /usr/share/fonts/NerdFonts
sudo cp -r JetBrainsMono /usr/share/fonts/NerdFonts
clear
cd
ls -la
cd Code
cd Web
ls -la
code canvas-particles
cd
fc-cache | grep "Jet"
fc-cache | grep jet
clear
fc-list | grep "Jet"
onedrive
cd Linux
ls Fonts
cleaer
cd
ls -la
cd code
clear
cd ls -la
ls -la
cd
pwd
clear
p10k configure
neofetch
cd code
cd Code
ls -la
ls -la Docker
cd Web
clear
cd /usr/share/fonts
ls -la
unzip Roboto_Mono.zip RobotoMono
unzip Roboto_Mono.zip
rm RobotoMono-Italic-VariableFont_wght.ttf\

mkdir RobotoMono
unzip Roboto_Mono.zip RobotoMono/
pwd
unzip Roboto_Mono.zip -d RobotoMono
ls RobotoMono
cd static
rm README.txt
rm RobotoMono-VariableFont_wght.ttf
rm RobotoMono-Italic-VariableFont_wght.ttf
nautilus .
cd RobotoMono
rm static
rm -r static
cd
onedrive
cd Linux
cd Fonts
rm Roboto_Mono.zip
mv Fonts MyFonts
cd MyFonts
mkdir Roboto
unzip Roboto.zip -d Roboto
ls Roboto
cd Roboto
rm LICENSE.txt
ls 
rm Roboto.zip
ls
cd 
cd .config
cd ../
code .zshrc
ls -la
clear
cd Code
onedrive
cd Linux
cd MyFonts
mkdir Cantarell
unzip Cantarell.zip -d Cantarell
ls Cantarell
rm Cantarell.zip
ls -la
p10k configure
clear
zsh
clear
cd ../
cd Gradience\ Presets
ls -la
clear
zsh
cd .
~/.config
cd ~/.config
cd
clear
cd .themes/
ls
cd monokai-flatdark
cd gnome-shell
ls 
pwd
code gnome-shell.css
cd /usr/share/gnome-shell
cd theme
cd
onedrive
cd Linux
cd Gradience\ Presets
nano flat-dark.json
clear
cd ../
mv Gradience\ Presets GradiencePresets
ls -la
ls GradiencePresets
onedrive
cd Linux
cd GradiencePresets
ls 
nano flat-dark.json
clear
cd
cd .themes
cd ../../
ls
rm -r custom-shell monokai-flatdark
ls 
clear
rm -r onedark-bluish
mkdir custom-shell
cd custom-shell
mkdir gnome-shell
cd gnome-shell
touch gnome-shell.css
code gnome-shell.css
cd
dnf list installed | grep document
dnf list installed | grep viewer
evince-previewer
dnf info evince-previewer
ls -la
clear
cd
zsh
clear
fish
fc-list | grep "Jet"
zsh
clear
nano .config/alacritty/alacritty.yml
code .config/alacritty/alacritty.yml
